name: Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  # Allow to run this workflow manually
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Install terraform
        uses: digitalservicebund/setup-terraform@adfabd79951446bc3078797c9cce4511328a8573 # v1.1.2
      - name: Check format
        run: |
          terraform fmt -recursive -check

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        terraform_module: ["stackit-object-storage", "stackit-state-bucket"]
    steps:
      - uses: actions/checkout@v5
      - name: "Install Terraform CLI"
        # Third-party action, pin to commit SHA!
        # See https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd
        with:
          terraform_version: v1.13.3

      - name: "Terraform Init"
        run: terraform init
        working-directory: ${{ matrix.terraform_module }}

      - name: Terraform Test
        run: terraform test
        working-directory: ${{ matrix.terraform_module }}

  terraform-docs:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        terraform_module: ["stackit-object-storage", "stackit-state-bucket"]
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Check and update terraform docs
        uses: terraform-docs/gh-actions@v1.4.1
        with:
          working-dir: ${{ matrix.terraform_module }}
          output-file: README.md
          output-method: inject
          args: "--hide-empty=true"
          git-push: true
          git-push-sign-off: true
